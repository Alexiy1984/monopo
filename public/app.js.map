{"version":3,"sources":["app/initialize.js","app/main.js","app/works.js","node_modules/auto-reload-brunch/vendor/auto-reload.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtxHA;AAAA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/app.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n  // do your setup here\n  console.log('Initialized app');\n});\n","document.addEventListener('DOMContentLoaded', function() {\n\n  console.log('main java-script  file initialized');\n\n  function IdGet(idname) {return typeof i == 'object' ? i : document.getElementById(idname);}\n\n  function ClassGet(classname) {return document.getElementsByClassName(classname);}\n\n\n  function RemoveClass(element, classname) {\n    var reg = new RegExp(\"\\\\b\"+ classname+\"\\\\b\",\"g\");\n    element.className = element.className.replace(reg,\" \");\n  }\n\n  function AddClass(element, classname) {\n    var arr;\n    arr = element.className.split(\" \");\n    if (arr.indexOf(classname) == -1) {\n      element.className += \" \" + classname;\n    }\n    element.className = element.className.replace(/\\s+/g,\" \");\n  }\n\n  window.onload = function () {\n\n    let logosvg = IdGet('JS-logo-svg');\n    logosvg.setAttribute(\"style\",\"fill: #fff\");\n\n    let menubutton = IdGet('JS-menu-button');\n    let menubuttonclicked = false;\n    \n    function GetNumeredIds(idPrefix, num) {\n      let numeredIds = [];\n      for (let index = 1; index <= num; index++) {\n        numeredIds[index] = IdGet( idPrefix + index);\n      }\n      return numeredIds\n    }\n    \n    menubutton.onclick = function() {\n\n      let rowsarray = GetNumeredIds('JS-row-',3);\n      let minsizemenu = IdGet('JS-min-size-menu');\n      let menuLines = GetNumeredIds('line-',3);\n      let navmenuitems = GetNumeredIds('JS-nav-menu__item-',5);\n      // let logosvg = IdGet('JS-logo-svg');\n      let rotatedtext = IdGet('JS-rotated-text');\n      let bottomarrow = IdGet('JS-bottom-arrow');\n      let hiddenanimgroup = IdGet('JS-hidden-anim-group');\n\n      if (!menubuttonclicked) {\n        AddClass(menubutton,'nav-menu__menu-button_nohide');\n        rowsarray.forEach(element => {AddClass(element,'block-hide')});\n        RemoveClass(minsizemenu,'block-hide');\n        AddClass(minsizemenu,'appeared');\n        menuLines.forEach(element => {AddClass(element,'nav-menu__menu-button__line_dark')});\n        AddClass(rotatedtext,'block-hide');\n        AddClass(bottomarrow,'block-hide');\n        AddClass(hiddenanimgroup,'block-hide');\n        navmenuitems.forEach(element => {AddClass(element,'block-hide')});\n        logosvg.setAttribute(\"style\",\"fill: #000\");\n        menubuttonclicked = true;\n      } \n      else {\n        RemoveClass(menubutton,'nav-menu__menu-button_nohide');\n        rowsarray.forEach(element => {RemoveClass(element,'block-hide')});\n        AddClass(minsizemenu,'block-hide');\n        RemoveClass(minsizemenu,'appeared');\n        menuLines.forEach(element => {RemoveClass(element,'nav-menu__menu-button__line_dark')});\n        RemoveClass(rotatedtext,'block-hide');\n        RemoveClass(bottomarrow,'block-hide');\n        RemoveClass(hiddenanimgroup,'block-hide');\n        navmenuitems.forEach(element => {RemoveClass(element,'block-hide')});\n        logosvg.setAttribute(\"style\",\"fill: #fff\");\n        menubuttonclicked = false;\n      }  \n    };\n\n    // вычисление высоты окна с учетом особенностей браузеров НАЧАЛО\n    // var scrollHeight = Math.max(\n    //   document.body.scrollHeight, document.documentElement.scrollHeight,\n    //   document.body.offsetHeight, document.documentElement.offsetHeight,\n    //   document.body.clientHeight, document.documentElement.clientHeight\n    // );\n    // console.log( 'Высота с учетом прокрутки: ' + scrollHeight );\n    // вычисление высоты окна с учетом особенностей браузеров КОНЕЦ\n\n    /*let svg =(IdGet('svg-1'));\n\n\n    svg.addEventListener(\"mouseover\", Overanim(svg));\n    svg.addEventListener(\"mouseout\",  Outanim(svg));\n\n\n    function  Overanim (elem) {\n      elem.setAttribute(\"class\",\"svg-circle svg-circle-hovered\");\n      console.log(svg);\n    }\n\n    function  Outanim (elem) {\n      elem.setAttribute(\"class\",\"svg-circle\");\n    } ЧАСТЬ НЕРАБОЧЕГО КОДА ДЛЯ SVG*/\n\n  }\n\n  window.onresize = function() {\n    //console.log( 'Размер окна: ' + document.documentElement.clientHeight );\n  }\n\n  window.onscroll = function() {\n    //console.log( 'Текущая прокрутка сверху: ' + window.pageYOffset );\n\n    if (window.pageYOffset > document.documentElement.clientHeight) {\n      //console.log('succes');\n      let secondblock = IdGet('second-vid-block');\n      let rotatedtext = IdGet('JS-rotated-text');\n      let hiddenanimgroup = IdGet('JS-hidden-anim-group');\n\n      //console.log(secondblock);\n\n      rotatedtext.innerHTML = 'next project';\n\n      RemoveClass(secondblock,'video-div__centered-block_hidden');\n      RemoveClass(hiddenanimgroup,'anim-group_hidden');\n\n    }\n    else if (window.pageYOffset <= document.documentElement.clientHeight){\n      //console.log('failure');\n      let secondblock = IdGet('second-vid-block');\n      let hiddenmenu = IdGet('JS-hidden-menu');\n      let rotatedtext = IdGet('JS-rotated-text');\n      let hiddenanimgroup = IdGet('JS-hidden-anim-group');\n\n      rotatedtext.innerHTML = 'scroll';\n\n      AddClass(secondblock,'video-div__centered-block_hidden');\n      AddClass(hiddenanimgroup,'anim-group_hidden');\n    }\n\n    if (window.pageYOffset > ((document.documentElement.clientHeight)*0.35))  {\n      let hiddenmenu = IdGet('JS-hidden-menu');\n\n      AddClass(hiddenmenu,'appeared');\n      // RemoveClass(hiddenmenu,'row__inner_hidden');\n    }\n\n  }\n\n});\n\n","document.addEventListener('DOMContentLoaded', function() {\n\n  console.log('works java-script  file initialized');\n  \n  function IdGet(idname) {return typeof i == 'object' ? i : document.getElementById(idname);}\n\n  function ClassGet(classname) {return document.getElementsByClassName(classname);}\n\n  function RemoveClass(element, classname) {\n    var reg = new RegExp(\"\\\\b\"+ classname+\"\\\\b\",\"g\");\n    element.className = element.className.replace(reg,\" \");\n  }\n\n  function AddClass(element, classname) {\n    var arr;\n    arr = element.className.split(\" \");\n    if (arr.indexOf(classname) == -1) {\n      element.className += \" \" + classname;\n    }\n    element.className = element.className.replace(/\\s+/g,\" \");\n  }\n\n  function GetCoords(element,attr) {\n    element = IdGet(element); \n    var box = element.getBoundingClientRect();\n    if (attr == 'left') {\n      return box.left + pageXOffset;\n    } else if (attr == 'top') {\n      return box.top + pageYOffset;\n    } else\n    return {\n      top: box.top + pageYOffset,\n      left: box.left + pageXOffset\n    };\n  }\n\n  function IsVisible(element, elemotop) {\n    element = IdGet(element);\n    console.log(element);\n    let wscrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    let elemotop = GetCoords(element,'top');\n    let elemotopwheight = elemoffcettop + element.offsetHeight;\n    let wscrollHeight = Math.max(\n      document.body.scrollHeight, document.documentElement.scrollHeight,\n      document.body.offsetHeight, document.documentElement.offsetHeight,\n      document.body.clientHeight, document.documentElement.clientHeight\n    );\n    return ((elemotopwheight <= wscrollTop + wscrollHeight) && (elemtop >= wscrollTop ));\n  }\n\n  function GetNumeredIds(idPrefix, num) {\n    let numeredIds = [];\n    for (let index = 1; index <= num; index++) {\n      numeredIds[index] = IdGet( idPrefix + index);\n    }\n    return numeredIds\n  }\n\n  let linksarray = [];\n\n  window.onload = function () {\n\n    let logosvg = IdGet('JS-logo-svg');\n    logosvg.setAttribute(\"style\",\"fill: #fff\");\n\n    let menubutton = IdGet('JS-menu-button');\n    let menubuttonclicked = false;\n    // console.log(menubuttonclicked);\n    // console.log(menubutton);\n\n    AddClass(menubutton,'nav-menu__menu-button_nohide');\n\n    let workarealinks = GetNumeredIds('JS-works-area-link-',6);\n\n    for (let index = 1; index < workarealinks.length; index++) {\n      linksarray[index] = GetCoords(workarealinks[index],'top');\n    }\n\n    for (let index = 3; index < workarealinks.length; index++) {\n      AddClass(workarealinks[index],'works-area__inner__link_hidden');\n    }\n\n    menubutton.onclick = function() {\n\n      let minsizemenu = IdGet('JS-min-size-menu');\n      let logosvg = IdGet('JS-logo-svg');\n      let worksarea = IdGet('JS-works-area');\n      let menuLines = GetNumeredIds('line-',3);\n      // let logosvg = IdGet('JS-logo-svg');\n      \n      if (!menubuttonclicked) {\n        RemoveClass(minsizemenu,'block-hide');\n        AddClass(worksarea,'block-hide');\n        AddClass(minsizemenu,'appeared');\n        menuLines.forEach(element => {AddClass(element,'nav-menu__menu-button__line_dark')});\n        logosvg.setAttribute(\"style\",\"fill: #000\");\n        menubuttonclicked = true;\n      } else {\n        AddClass(minsizemenu,'block-hide');\n        RemoveClass(worksarea,'block-hide');\n        RemoveClass(minsizemenu,'appeared');\n        menuLines.forEach(element => {RemoveClass(element,'nav-menu__menu-button__line_dark')});\n        logosvg.setAttribute(\"style\",\"fill: #fff\");\n        menubuttonclicked = false;\n      }\n      \n    }\n\n  }\n\n  window.onscroll = function() {\n    let workarealinks = GetNumeredIds('JS-works-area-link-',6);\n\n      // console.log(IsVisible('JS-works-area-link-1'));\n      // console.log(GetCoords('JS-works-area-link-1', 'top'));\n      console.log(linksarray);\n  }\n\n\n});\n","/* jshint ignore:start */\n(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n  if (window._ar) return;\n  window._ar = true;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=stylesheet]'))\n        .filter(function(link) {\n          var val = link.getAttribute('data-autoreload');\n          return link.href && val != 'false';\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    },\n\n    javascript: function(){\n      var scripts = [].slice.call(document.querySelectorAll('script'));\n      var textScripts = scripts.map(function(script) { return script.text }).filter(function(text) { return text.length > 0 });\n      var srcScripts = scripts.filter(function(script) { return script.src });\n\n      var loaded = 0;\n      var all = srcScripts.length;\n      var onLoad = function() {\n        loaded = loaded + 1;\n        if (loaded === all) {\n          textScripts.forEach(function(script) { eval(script); });\n        }\n      }\n\n      srcScripts\n        .forEach(function(script) {\n          var src = script.src;\n          script.remove();\n          var newScript = document.createElement('script');\n          newScript.src = cacheBuster(src);\n          newScript.async = true;\n          newScript.onload = onLoad;\n          document.head.appendChild(newScript);\n        });\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n/* jshint ignore:end */\n"]}